#+STARTUP: showall hidestars

* ~nix-tools~

~nix-tools~ is a set of haskell to nix tools to integrate haskell
projects into nix build environements.

* Motivation

Why (yet) another conversion to nix?  ~cabal2nix~ has served the nix
community well for a long time.  It does have short comings that can't
be easily overcome without significantly altering ~cabal2nix~.  These
are among others:

- hard coded flags / operating system upon invocation
- package resolution in cabal2nix instead of nix.

Ideally we'd convert cabal files into nix expression and retain almost
everything from the cabal file and let nix deal with the expression
afterwards.

~nix-tools~ explores this space of a very simple ~.cabal~ conversion
into a ~nix~ expression and then doing the lifting in nix.

* QuickStart

View the [[https://input-output-hk.github.io/haskell.nix/][haskell.nix documentation]] for instructions on how to get
started with your own project.

* Building

To build all of the ~nix-tools~ using Nix:

#+begin_example
nix-build -A nix-tools-all-execs
./result/bin/stack-to-nix --help
#+end_example

If you are making changes to the Haskell code, then build the Cabal
project with:

#+begin_example
cabal new-build
#+end_example

* Project Roadmap

Under the [[https://github.com/input-output-hk/haskell.nix][haskell.nix]]
umbrella there are a few [[https://github.com/input-output-hk/haskell.nix/projects][GitHub Projects]]
for tracking completion of the project goals. If you would like to
follow or contribute to this effort then that would be a good place to
start.
